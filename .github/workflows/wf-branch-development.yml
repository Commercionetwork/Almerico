name: CI/CD Pipeline - Development Branch

run-name: ${{ github.actor }} is building the Testnet Explorer from ${{ github.ref_name }}

env:
  ANCESTORS_LIST: ${{ vars.ALMERICO_TESTNET_ANCESTORS_LIST }}
  API_VERSION: ${{ vars.ALMERICO_TESTNET_API_VERSION }}
  API_VERSION_COSMWASM: ${{ vars.ALMERICO_TESTNET_API_VERSION_COSMWASM }}
  BACKEND: ${{ vars.ALMERICO_TESTNET_BACKEND }}
  BACKEND_WS: ${{ vars.ALMERICO_TESTNET_BACKEND_WS }}
  CONTRACT_DEX: ${{ vars.ALMERICO_TESTNET_CONTRACT_DEX }}
  FIRST_CONVERSION_RATE: ${{ vars.ALMERICO_TESTNET_FIRST_CONVERSION_RATE }}
  FIRST_HEIGHT: ${{ vars.ALMERICO_TESTNET_FIRST_HEIGHT }}
  HAS_POOLS: ${{ vars.ALMERICO_TESTNET_HAS_POOLS }}
  LCD_URL: ${{ vars.ALMERICO_TESTNET_LCD_URL }}
  MAIN_TITLE: ${{ vars.ALMERICO_TESTNET_MAIN_TITLE }}
  WASM_CW20_CODE_ID: ${{ vars.ALMERICO_TESTNET_WASM_CW20_CODE_ID }}
  WASM_SWAP_CODE_ID: ${{ vars.ALMERICO_TESTNET_WASM_SWAP_CODE_ID }}
  WS_URL: ${{ vars.ALMERICO_TESTNET_WS_URL }}

on:
  push:
    branches:
      - 'development'

jobs:
  call-workflow-build-and-test:
    uses: ./.github/workflows/wf-build-test.yml

  deploy-docker-image-testnet:
    needs: call-workflow-build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Environment Variables
        run: |
          if ${{ env.ANCESTORS_LIST == '' ||  env.API_VERSION == '' ||  env.API_VERSION_COSMWASM == '' ||  env.BACKEND == '' ||  env.BACKEND_WS == '' ||  env.CONTRACT_DEX == '' ||  env.FIRST_CONVERSION_RATE == '' ||  env.FIRST_HEIGHT == ''  ||  env.HAS_POOLS == '' ||  env.LCD_URL == '' ||  env.MAIN_TITLE == '' ||  env.WASM_CW20_CODE_ID == '' ||  env.WASM_SWAP_CODE_ID == '' ||  env.WS_URL == '' }}; then
            echo "Error: one or more environment variables are not set."
            exit 1
          else
            echo "Environment variables are set."
            exit 0
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login To Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_IMAGE }}:testnet
          build-args: |
            ANCESTORS_LIST=${{ env.ANCESTORS_LIST }}
            API_VERSION=${{ env.API_VERSION }}
            API_VERSION_COSMWASM=${{ env.API_VERSION_COSMWASM }}
            BACKEND=${{ env.BACKEND }}
            BACKEND_WS=${{ env.BACKEND_WS }}
            CONTRACT_DEX=${{ env.CONTRACT_DEX }}
            FIRST_CONVERSION_RATE=${{ env.FIRST_CONVERSION_RATE }}
            FIRST_HEIGHT=${{ env.FIRST_HEIGHT }}
            HAS_POOLS=${{ env.HAS_POOLS }}
            LCD_URL=${{ env.LCD_URL }}
            MAIN_TITLE=${{ env.MAIN_TITLE }}
            WASM_CW20_CODE_ID=${{ env.WASM_CW20_CODE_ID }}
            WASM_SWAP_CODE_ID=${{ env.WASM_SWAP_CODE_ID }}
            WS_URL=${{ env.WS_URL }}
