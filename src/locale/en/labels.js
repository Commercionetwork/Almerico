export const labels = {
  active: 'Active',
  address: 'Address',
  algorithm: 'Algorithm',
  amount: 'Amount',
  availables: 'Availables',
  blocks: 'Blocks',
  blocksPercentage: 'Blocks %',
  bonded: 'Bonded',
  buyer: 'Buyer',
  caption: 'Caption',
  certificateProfile: 'Certificate profile',
  comTotal: 'COM Total',
  commission: 'Commission',
  contentUri: 'Content URI',
  context: 'Context',
  controller: 'Controller',
  copy: 'Copy',
  created: 'Created',
  cumulative: 'Cumulative',
  date: 'Date',
  delegated: 'Delegated',
  delegatedTokens: 'Delegated tokens',
  delegations: 'Delegations',
  delegator: 'Delegator',
  delegatorAddress: 'Delegator address',
  depositor: 'Depositor',
  destinationValidatorAddress: 'Destination validator address',
  details: 'Details',
  did: 'Did',
  documentUUID: 'Document UUID',
  earning: 'Earning',
  encryptionDataEncryptedData: 'Encryption data encrypted data',
  encryptionDataKeys: 'Encryption data keys',
  failed: 'Failed',
  fee: 'Fee',
  freezePeriod: 'freeze period',
  fromAddress: 'From address',
  gasUsedWanted: 'Gas (Used/Wanted)',
  getOnline: 'Get online',
  government: 'Government',
  hash: 'Hash',
  height: 'Height',
  id: 'id',
  identity: 'Identity',
  inactive: 'Inactive',
  maxChangeRate: 'Max change rate',
  maxRate: 'Max rate',
  membership: 'Membership',
  membershipType: 'Membership type',
  metadataContentUri: 'Metadata content uri',
  metadataSchemaType: 'Metadata schema type',
  metadataSchemaUri: 'Metadata schema uri',
  metadataSchemaVersion: 'Metadata schema version',
  minSelfDelegation: 'Min self delegation',
  moniker: 'Moniker',
  msgs: 'Msgs',
  msgsOnTxs: 'Msgs/Txs',
  multiTypes: 'Multi types',
  multiValues: 'Multi values',
  name: 'Name',
  newMembership: 'New membership',
  none: 'None',
  not: 'Not',
  notBonded: 'Not Bonded',
  notEarning: 'Not Earning',
  officialNode: 'Official node (raw json)',
  operator: 'Operator',
  others: 'Others',
  proof: 'Proof',
  proofPurpose: 'Proof purpose',
  proposer: 'Proposer',
  publicKey: 'Public key',
  publicKeyPem: 'Public key pem',
  rank: 'Rank',
  rate: 'Rate',
  rawLog: 'Raw log',
  recipient: 'Recipient',
  reset: 'Reset',
  result: 'Result',
  rewards: 'Rewards',
  scan: 'Scan',
  sdnData: 'SDN data',
  search: 'Search',
  searchHeight: 'Search Height',
  searchNameAddressAccount: 'Search Name, Address, Account',
  securityContact: 'Security contact',
  self: 'Self',
  sender: 'Sender',
  serviceEndpoint: 'Service endpoint',
  share: 'Share',
  signatureValue: 'Signature value',
  signer: 'Signer',
  signerInstance: 'Signer instance',
  sourceValidatorAddress: 'Source validator address',
  status: 'Status',
  storageUri: 'Storage uri',
  subscriber: 'Subscriber',
  success: 'Success',
  time: 'Time',
  toAddress: 'To address',
  tokens: 'Tokens',
  tokensPerformance: 'tokens performance',
  tsp: 'Tsp',
  txHash: 'Tx hash',
  txs: 'Txs',
  txsAmount: 'Txs amount',
  type: 'Type',
  udetails: 'Udetails',
  unbondings: 'Unbondings',
  updateTime: 'Update time',
  uuid: 'UUID',
  validator: 'Validator',
  validatorAddress: 'Validator address',
  validators: 'Validators',
  value: 'Value',
  vcrId: 'VCR id',
  verificationMethod: 'Verification method',
  votingPower: 'Voting Power',
  website: 'Website',
  yes: 'Yes',
};
